class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

def reverse_linked_list(head):
    current = head
    prev = None

    while current is not None:
        next_node = current.next  # Save the next node
        current.next = prev        # Reverse the link
        prev = current             # Move the prev pointer forward
        current = next_node        # Move the current pointer forward

    return prev  # New head of the reversed linked list

# Example usage:
# Create a linked list: 1 -> 2 -> 3 -> 4 -> 5
head = Node(1)
head.next = Node(2)
head.next.next = Node(3)
head.next.next.next = Node(4)
head.next.next.next.next = Node(5)

# Reverse the linked list
new_head = reverse_linked_list(head)

# Print the reversed linked list
while new_head is not None:
    print(new_head.data, end=" ")
    new_head = new_head.next
